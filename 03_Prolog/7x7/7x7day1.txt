Day 1 - Experiments
Prolog has two parts: one part expresses the data (facts and rules) and the other queries that data (query)
- Facts. A basic assertion about some 'world'
- Rules. An inference about facts in that world
- Query. A question about that world
Facts an rules go into a knowledge base. Prolog compiles the knowledge base into a form that is efficient for queries.

In the following exercises => indicates what is returned by the query in Prolog. 
; is typed in by the user to find the next result of the query (if there is one).


Experiment 1 - Basic Facts / Basic Inferences and Variables
[facts and rules] = friends.pl 
[queries]   likes(wallace, sheep).          =>  false
            likes(grommit, cheese).         =>  true
            friend(wallace, wallace).       =>  false
            friend(grommit, wallace).       =>  true
            friend(wallace, grommit).       =>  true
            friend(wendolene, grommit).     =>  false


Experiment 2 - Filling in the Blanks
[facts and rules] = food.pl
[queries]   food_type(What, meat).          =>  What = spam         ; =>    What = sausage.
            food_flavor(sausage, sweet).    =>  false
            flavor(sweet, What).            =>  What = dessert      ; =>    What = soda.
            food_flavor(What, savory).      =>  What = velveeta     ; =>    What = spam        ; =>     What = sausage     ; => 


Experiment 3 - Map Coloring
[facts and rules] = map.pl
[queries]   coloring(Alabama, Mississippi, Georgia, Tennessee, Florida).    
=>          Alabama = blue,
            Mississippi = Georgia, Georgia = red,
            Tennessee = Florida, Florida = green 

; =>        Alabama = green,
            Mississippi = Georgia, Georgia = red,
            Tennessee = Florida, Florida = blue

; =>        Alabama = blue,
            Mississippi = Georgia, Georgia = green,
            Tennessee = Florida, Florida = red

; =>        Alabama = red,
            Mississippi = Georgia, Georgia = green,
            Tennessee = Florida, Florida = blue

; =>        Alabama = green,
            Mississippi = Georgia, Georgia = blue,
            Tennessee = Florida, Florida = red

; =>        Alabama = red,
            Mississippi = Georgia, Georgia = blue,
            Tennessee = Florida, Florida = green

; =>        false.


Experiment 4 - Unification, Part 1
[facts and rules] = ohmy.pl
[queries]   dorothy(lion, tiger, bear).     =>  true
            dorothy(One, Two, Three).       =>  One = lion, Two = tiger, Three = bear.
            twin_cats(One, Two).            =>  One = Two, Two = lion  
                                          ; =>  One = lion, Two = tiger  
                                          ; =>  One = tiger, Two = lion  
                                          ; =>  One = Two, Two = tiger.