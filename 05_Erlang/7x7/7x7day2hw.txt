Day 2 - Self-Study (Homework)

Do:
1. Consider a list of keyword-value tuples, such as [{erlang, "a functional
   language"}, {ruby, "an OO language"}]. Write a function that accepts
   the list and a keyword and returns the associated value for the keyword.

2. Consider a shopping list that looks like [{item quantity price}, ...].
   Write a list comprehension that builds a list of items of the form
   [{item total_price}, ...], where total_price is quantity times price.

Bonus problem:
- Write a program that reads a tic-tac-toe board presented as a list
  or a tuple of size nine. Return the winner (x or o) if a winner
  has been determined, cat if there are


1. Consider a list of keyword-value tuples, such as [{erlang, "a functional
   language"}, {ruby, "an OO language"}]. Write a function that accepts
   the list and a keyword and returns the associated value for the keyword.

   - find_value.erl 
   - find_value:find_value()
   

2. Consider a shopping list that looks like [{item quantity price}, ...].
   Write a list comprehension that builds a list of items of the form
   [{item total_price}, ...], where total_price is quantity times price.

   - shopping.erl
   - shopping:calculate_total_prices()


Bonus problem:
   Write a program that reads a tic-tac-toe board presented as a list
   or a tuple of size nine. Return the winner (x or o) if a winner
   has been determined, cat if there are no more possible moves,
   or no_winner if no player has won yet.

   - tic_tac_toe.erl
   - tic_tac_toe:check_winner()
